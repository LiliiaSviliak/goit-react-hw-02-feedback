{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.scss","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Section/Section.module.scss"],"names":["module","exports","Section","this","props","title","children","className","styles","container","main__title","feedbackButtons__container","Component","FeedbackOptions","onLeaveFeedback","options","feedback__buttons","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","stateKeysArray","Object","keys","handleStateChange","event","setState","prevState","stateKey","target","textContent","toLowerCase","capitalizeFirstLetter","string","charAt","toUpperCase","slice","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","map","key","uniqId","shortid","generate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,kBAAoB,6C,4KCoBvBC,E,4JAhBX,WACI,MAA4BC,KAAKC,MAAzBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAEf,OACI,0BAASC,UAAWC,IAAOC,UAA3B,UACI,oBAAIF,UAAWC,IAAOE,YAAtB,SAAoCL,IACpC,qBAAKE,UAAWC,IAAOG,2BAAvB,SAAoDL,W,GAP9CM,a,iBCiBPC,E,4JAhBX,WACI,MAAqCV,KAAKC,MAAlCU,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,QAEzB,OACI,wBAAQR,UAAWC,IAAOQ,kBAAmBC,QAASH,EAAtD,SACKC,Q,GANaH,aCuBfM,E,4JAvBX,WACI,MAA0Df,KAAKC,MAAvDe,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBAEnC,OACI,gCACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,c,GAVSX,aCaVY,E,4JAXX,WACI,IAAQC,EAAYtB,KAAKC,MAAjBqB,QAER,OAAO,oBAAIlB,UAAWC,IAAOC,UAAtB,SAAkCgB,Q,GAJtBb,aC6EZc,G,kNArEbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,eAAiBC,OAAOC,KAAK,EAAKH,O,EAElCI,kBAAoB,SAACC,GACnB,EAAKC,UAAS,SAACC,GACb,IAAMC,EAAWH,EAAMI,OAAOC,YAAYC,cAE1C,OAAO,eAAGH,EAAWD,EAAUC,GAAY,O,EAI/CI,sBAAwB,SAACC,GACvB,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,I,EAGvDC,mBAAqB,WACnB,MAA+B,EAAKjB,MAEpC,OAFA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBwB,gCAAkC,WAChC,IAAQ1B,EAAS,EAAKQ,MAAdR,KAER,OAAO2B,KAAKC,MAAO5B,EAAO,EAAKyB,qBAAwB,M,4CAGzD,WAAU,IAAD,OACP,EAA+BzC,KAAKwB,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACGF,KAAKyB,eAAeoB,KAAI,SAACC,GACxB,IAAMC,EAASC,IAAQC,WAEvB,OACE,cAAC,EAAD,CAEErC,QAAS,EAAKwB,sBAAsBU,GACpCnC,gBAAiB,EAAKiB,mBAFjBmB,QAQZ/B,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAChC,cAAC,EAAD,CAAShB,MAAM,aAAf,SACE,cAAC,EAAD,CACEc,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOnB,KAAKyC,qBACZrB,mBAAoBpB,KAAK0C,sCAI7B,cAAC,EAAD,CAAcpB,QAAQ,6B,GA/Ddb,cCPlByC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BzD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,YAAc,6BAA6B,2BAA6B,+C","file":"static/js/main.49856494.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__buttons\":\"FeedbackOptions_feedback__buttons__2Wpz0\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.scss\";\r\n\r\nclass Section extends Component {\r\n    render() {\r\n        const { title, children } = this.props;\r\n\r\n        return (\r\n            <section className={styles.container}>\r\n                <h2 className={styles.main__title}>{title}</h2>\r\n                <div className={styles.feedbackButtons__container}>{children}</div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.scss\";\r\n\r\nclass FeedbackOptions extends Component {\r\n    render() {\r\n        const { onLeaveFeedback, options } = this.props;\r\n\r\n        return (\r\n            <button className={styles.feedback__buttons} onClick={onLeaveFeedback}>\r\n                {options}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n    options: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Statistics extends Component {\r\n    render() {\r\n        const { good, neutral, bad, total, positivePercentage } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <p>Good: {good}</p>\r\n                <p>Neutral: {neutral}</p>\r\n                <p>Bad: {bad}</p>\r\n                <p>Total: {total}</p>\r\n                <p>Positive feedback: {positivePercentage}%</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../Section/Section.module.scss\";\r\n\r\nclass Notification extends Component {\r\n    render() {\r\n        const { message } = this.props;\r\n\r\n        return <h2 className={styles.container}>{message}</h2>;\r\n    }\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\n// eslint-disable-next-line\nimport baseStyles from \"./base-styles/base-styles.scss\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  stateKeysArray = Object.keys(this.state);\n\n  handleStateChange = (event) => {\n    this.setState((prevState) => {\n      const stateKey = event.target.textContent.toLowerCase();\n\n      return { [stateKey]: prevState[stateKey] + 1 };\n    });\n  };\n\n  capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n\n    return Math.floor((good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          {this.stateKeysArray.map((key) => {\n            const uniqId = shortid.generate();\n\n            return (\n              <FeedbackOptions\n                key={uniqId}\n                options={this.capitalizeFirstLetter(key)}\n                onLeaveFeedback={this.handleStateChange}\n              />\n            );\n          })}\n        </Section>\n\n        {good > 0 || neutral > 0 || bad > 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2QhTq\",\"main__title\":\"Section_main__title__tlkti\",\"feedbackButtons__container\":\"Section_feedbackButtons__container__iX9K4\"};"],"sourceRoot":""}